var mons = [{
        lv: 95,
        name: "凱美拉",
        label: "召喚",
        img: "Chimera",
        time: 120,
        race: "動物",
        attr: "火",
        size: "大",
        loc: "古城大廳",
        mvp: !0,
        url: "30019"
    }, {
        lv: 100,
        name: "蘭特克力斯",
        label: "召喚",
        img: "Valkyrie",
        time: 120,
        race: "天使",
        attr: "聖",
        size: "大",
        loc: "古城大廳",
        mvp: !0,
        url: "30032"
    }, {
        lv: 100,
        name: "德古拉男爵",
        label: "召喚",
        img: "Dracula",
        time: 120,
        race: "惡魔",
        attr: "暗",
        size: "大",
        loc: "古城大廳",
        mvp: !0,
        url: "30031"
    }, {
        lv: 100,
        name: "巨大的恶魔波利",
        label: "召喚",
        img: "deviling",
        time: 120,
        race: "惡魔",
        attr: "暗",
        size: "中",
        loc: "古城大廳",
        mvp: !0,
        url: "30030"
    },{
        lv: 118,
        name: "卡倫",
        img: "garm",
        time: 120,
        race: "動物",
        attr: "水",
        size: "大",
        loc: "薑餅城",
        mvp: !0,
        url: "30039"
    }, {
        lv: 133,
        name: "死靈騎士 ",
        img: "30048",
        time: 120,
        race: "惡魔",
        attr: "暗",
        size: "大",
        loc: "尼芙菲姆",
        mvp: !0,
        url: "30048"
    }, {
        lv: 135,
        name: "嗜血怪人",
        img: "30049",
        time: 120,
        race: "人形",
        attr: "暗",
        size: "大",
        loc: "霧之森林",
        mvp: !0,
        url: "30049"
    }, {
        lv: 136,
        name: "暗·超魔導師 凱特莉娜",
        img: "B_Wizard_F",
        time: 120,
        race: "人形",
        attr: "念",
        size: "中",
        loc: "研究所地下2F 西區",
        mvp: !0,
        url: "30051"
    }, {
        lv: 138,
        name: "暗·神射手 迪文",
        img: "B_Hunter_F",
        time: 120,
        race: "人形",
        attr: "風",
        size: "中",
        loc: "研究所地下2F 東區",
        mvp: !0,
        url: "30052"
    }, {
        lv: 138,
        name: "狼外婆",
        img: "30050",
        time: 120,
        race: "動物",
        attr: "無",
        size: "大",
        loc: "斯凱領頓",
        mvp: !0,
        url: "30050"
    }, {
        lv: 148,
        name: "幽暗夢魘",
        img: "Gloomundernight",
        time: 148,
        race: "無形",
        attr: "念",
        size: "大",
        loc: "聖域神殿地下",
        mvp: !0,
        url: "30056"
    }],
    _cookie = {};

function addZero(e) {
    return e < 10 ? e < 0 ? addZero(-1 * e) : "0" + e : e
}

function parseTime(e) {
    return "" == e ? 0 : parseInt(e)
}
_cookie.set = function(e, t) {
    var i = new Date;
    i.setTime(i.getTime() + 2592e6), document.cookie = e + "=" + escape(t) + ";expires=" + i.toGMTString()
}, _cookie.get = function(e) {
    var t = document.cookie.match(new RegExp("(^| )" + e + "=([^;]*)(;|$)"));
    if (null == t) return null;
    var i = unescape(t[2]);
    return isNaN(i) ? i : Number(i)
}, _cookie.del = function(e) {
    var t = new Date;
    t.setTime(t.getTime() - 1);
    var i = _cookie.get(e);
    null != i && (document.cookie = e + "=" + i + ";expires=" + t.toGMTString())
};
var _mon = {
    time: [],
    longpress_delay: 600
};
_mon.longpress_timer, _mon.dbclick_timer = [], _mon.dbclick_id = -1, _mon.nameTrim = function(e) {
    return e.replace("(迷藏)", "").replace("(西門)", "").replace("(南門)", "")
}, _mon.init = function() {
    for (var e = 0; e < mons.length; e++) _mon.time[e] = !1, $mon = $("<div/>", {
        id: "mon_" + e,
        "data-index": e,
        class: "mon mon_" + e + " m_" + mons[e].img,
        "data-time": mons[e].time,
        "data-count": 9999,
        title: "LV." + mons[e].lv + " " + _mon.nameTrim(mons[e].name) + " [" + mons[e].race + "/" + mons[e].attr + "/" + mons[e].size + "]"
    }), $mon.html("<div class='time_wrap'><div class='cover'></div><div class='showing'></div><div class='mark'></div>" + (mons[e].label ? "<div class='label'>" + mons[e].label + "</div>" : "") + "<img src='img/mon/" + mons[e].img + ".png?v=2'><span class='time'></span><span class='race'>" + mons[e].race + "</span><span class='attr'>" + mons[e].attr + "</span><span class='size'>" + mons[e].size + "</span></div><div class='name'><a target='_blank' href='https://ro.fws.tw/db/monsters/info/" + mons[e].url + "'>" + _mon.nameTrim(mons[e].name) + "</a></div><div class='loc'>" + mons[e].loc + "</div>"), null != _cookie.get(e) && (_mon.time[e] = new Date, _mon.time[e].setTime(_cookie.get(e)), $mon.addClass("count")), $mon.find(".cover").click(function(e) {
        _mon.click(e, $(this).closest(".mon").data("index"))
    }), $mon.on("touchstart", function(e) {
        _mon.touch(e, $(this).data("index"))
    }), $mon.on("touchmove", function(e) {
        clearTimeout(_mon.longpress_timer)
    }), $mon.on("touchend", function(e) {
        clearTimeout(_mon.longpress_timer)
    }), $mon.contextmenu(function(e) {
        clearTimeout(_mon.longpress_timer), _mon.setTimeDialog($(this).data("index")), e.preventDefault()
    }), mons[e].mvp ? $mon.addClass("mvp").appendTo($("#mvp")) : $mon.addClass("mini").appendTo($("#min")), $qMon = $mon.clone(), $qMon.click(function(e) {
        _mon.click(e, $(this).data("index"))
    }), $qMon.on("touchstart", function(e) {
        _mon.touch(e, $(this).data("index"))
    }), $qMon.on("touchmove", function(e) {
        clearTimeout(_mon.longpress_timer)
    }), $qMon.on("touchend", function(e) {
        clearTimeout(_mon.longpress_timer)
    }), $qMon.contextmenu(function(e) {
        clearTimeout(_mon.longpress_timer), _mon.setTimeDialog($(this).data("index")), e.preventDefault()
    }), $qMon.appendTo($("#queue .wrap"))
}, _mon.touch = function(e, t) {
    clearTimeout(_mon.longpress_timer);
    var i = e;
    _mon.longpress_timer = setTimeout(function() {
        _mon.setTimeDialog(t), i.preventDefault()
    }, _mon.longpress_delay)
}, _mon.click = function(e, t) {
    var i = $(".mon_" + t).attr("data-time");
    if ($(".mon_" + t).hasClass("count")) {
        var n = $(".mon_" + t).hasClass("show");
        _mon.dbclick_id != t ? (_mon.dbclick_id = t, clearTimeout(_mon.dbclick_timer[t]), _mon.dbclick_timer[t] = setTimeout(function() {
            _mon.dbclick_id = -1, n && (_mon.reset(t), _mon.setTime(t, i))
        }, 400)) : _mon.dbclick_id == t && (clearTimeout(_mon.dbclick_timer[t]), $(".mon_" + t).addClass("reset"), $(".mon_" + t).removeClass("count"), _mon.dbclick_id = -1)
    } else 0 == _mon.time[t] && (_mon.setTime(t, i), $(".mon_" + t).addClass("count"));
    e.preventDefault()
}, _mon.reset = function(e) {
    _mon.time[e] = !1, $(".mon_" + e).removeClass("last played ready count show reset"), _cookie.del(e), $(".mon_" + e).find(".time").html("--:--:--"), $(".mon_" + e).data("count", 9999)
}, _mon.ispop = !1, _mon.setTimeDialog = function(t) {
    if (!_mon.ispop)
        if (_mon.ispop = !0, 500 < $(window).width()) {
            var e = $(".m_" + t).attr("data-time"),
                i = prompt("輸入剩餘分鐘,或[時.分.秒]或[時,分,秒]", e);
            _mon.ispop = (null == i || "" == i ? alert("時間輸入錯誤") : _mon.setTime(t, i), !1)
        } else $.MessageBox({
            input: !0,
            message: "輸入剩餘分鐘,或[時.分.秒]或[時,分,秒]"
        }).done(function(e) {
            _mon.ispop = (null == e || "" == e ? alert("時間輸入錯誤") : _mon.setTime(t, e), !1)
        })
};
var _notify = {
        show: function(e, t) {
            if (_setting.inited)
                if ("Notification" in window)
                    if ("granted" == Notification.permission) {
                        var i = new Notification("[" + e.name + "] " + t + "!", {
                            body: "[" + e.loc + "] " + e.race + "/" + e.attr + "/" + e.size,
                            icon: "img/mon/" + e.img + ".png"
                        });
                        i.onshow = function() {
                            setTimeout(i.close.bind(i), 4e3)
                        }
                    } else console.log("not approve");
            else console.log("not support Notification")
        }
    },
    _queue = {
        init: function() {
            $("#queue .wrap").mousewheel(function(e, t) {
                this.scrollLeft -= 60 * t, e.preventDefault()
            })
        },
        update: function(e) {
            mQ = [];
            for (var t = 0; t < e.length; t++) mQ.push(e[t].name);
            if (JSON.stringify(queue) != JSON.stringify(mQ)) {
                var i = $("#queue .wrap");
                i.find(".mon").sort(function(e, t) {
                    return $(e).attr("data-count") - $(t).attr("data-count")
                }).appendTo(i), queue = mQ
            }
            var n = -$("#queue .wrap").outerHeight();
            $("body").hasClass("ckb_queue") && !$("body").hasClass("queue_hide") && (n = 0), $("#queue").css("bottom", n)
        }
    },
    _setting = {
        inited: !(_mon.setTime = function(e, t) {
            var i = 0,
                n = 0,
                m = 0,
                o = t.replace(/\,/g, ".").split(".");
            if (o.length <= 3) {
                if (3 == o.length ? (m = parseTime(o[0]), n = parseTime(o[1]), i = parseTime(o[2])) : 2 == o.length ? (n = parseTime(o[0]), i = parseTime(o[1])) : 1 == o.length && (n = parseTime(o[0])), i + n + i == 0) return void alert("時間輸入錯誤");
                _mon.reset(e), _mon.time[e] = new Date, _mon.time[e].setHours(_mon.time[e].getHours() + m), _mon.time[e].setMinutes(_mon.time[e].getMinutes() + n, _mon.time[e].getSeconds() + i, 0), _cookie.set(e, _mon.time[e].getTime())
            } else alert("時間輸入錯誤")
        })
    };
_setting.isShowInfo, _setting.isShowLoc, _setting.isShowName, _setting.isShowNotify, _setting.isTTS, _setting.alertSound, _setting.liveTime, _setting.warnTime = 5, _setting.change = function(e, t) {
    _cookie.del(e), _cookie.set(e, t ? 1 : 0), t ? ($("body").addClass(e), $("#" + e).prop("checked", !0)) : ($("body").removeClass(e), $("#" + e).prop("checked", !1))
}, _setting.genCBK = function(e, t, i, n) {
    var m = n;
    _setting[e] = _cookie.get(t), null == _setting[e] ? (_setting.change(t, i), _setting[e] = i) : _setting.change(t, _setting[e]), $("#" + t).change(function() {
        _setting[e] = $(this).is(":checked"), _setting.change(t, _setting[e]), void 0 !== m && m(_setting[e])
    })
}, _setting.genVAL = function(e, t, i, n) {
    var m = n;
    _setting[e] = _cookie.get(t), null != _setting[e] ? $("#" + t).val(_cookie.get(t)) : (_cookie.set(t, i), $("#" + t).val(i)), _setting[e] = $("#" + t).val(), $("#" + t).change(function() {
        _setting[e] = $(this).val(), _cookie.set(t, _setting[e]), void 0 !== m && m(_setting[e])
    })
}, _setting.init = function() {
    _setting.genCBK("isShowInfo", "ckb_info", !0), _setting.genCBK("isShowLoc", "ckb_loc", !0), _setting.genCBK("isShowName", "ckb_name", !0), _setting.genCBK("isShowNotify", "ckb_notify", !0), _setting.genCBK("isTTS", "ckb_tts", !0), _setting.genVAL("alertSound", "sel_alert", 1, function(e) {
        _sound.play(), console.log(e)
    }), _setting.genVAL("liveTime", "sel_livetime", 1), _setting.genVAL("readyTime", "sel_readytime", 2), _setting.genVAL("txtMonShow", "txt_showing", "走了,[BOSS]已現身"), _setting.genVAL("txtMonReady", "txt_coming", "請準備,[BOSS]")
}, _setting.export = function() {
    var e = _setting.get(),
        t = new Blob([e], {
            type: "application/octet-stream"
        }),
        i = URL.createObjectURL(t),
        n = document.createElement("a");
    document.body.appendChild(n), n.href = i, n.download = "ooooo.csv", n.click()
}, _setting.get = function() {
    for (var e = "", t = 0; t < 50; t++) {
        for (var i = 0; i < 5; i++) 0 < i && (e += ","), e = e + "Item" + t + "_" + i;
        e += "\n"
    }
    return "第一欄,第二欄,第三欄,第四欄,第五欄\n" + e
};
var _sound = {
        list: ["", "sound/alert.mp3", "sound/alert2.mp3"],
        play: function() {
            var e = _sound.list[_setting.alertSound];
            if ($(window).width() < 500);
            else if (e) {
                var t = new Audio(e);
                t.volume = .5, t.loop = !1, t.play()
            }
        }
    },
    _tts = {
        playing: !1,
        init: function() {
            responsiveVoice.setDefaultVoice("Chinese Female")
        },
        speak: function(e, t) {
            if (0 < _setting.inited) {
                var i = e;
                setTimeout(function() {
                    _tts.playing ? _tts.speak(i, 200) : _tts.real_speak(i)
                }, t)
            }
        },
        real_speak: function(e) {
            _tts.playing = !0, $(window).width() < 768 ? responsiveVoice.speak(e, "Chinese Female", {
                rate: 1.2,
                volume: 3,
                onend: function() {
                    _tts.playing = !1
                }
            }) : responsiveVoice.speak(e, "Chinese Female", {
                rate: 1.35,
                volume: 3,
                onend: function() {
                    _tts.playing = !1
                }
            })
        }
    },
    _view = {
        init: function() {
            $("#setting").click(function() {
                $("#help").toggleClass("on")
            }), $("#queue h4").click(function() {
                $("body").toggleClass("queue_hide")
            }), _view.sizeChg()
        },
        sizeChg: function() {
            $(window).width() < 300 ? ($(".mon").width(80), $(".mon img").width(80), $(".mon .time").width(74), $("#cus_time").text("長按")) : $(window).width() < 350 ? ($(".mon").width(($(window).width() - 20) / 3 - 10), $(".mon img").width("100%"), $(".mon .time").width($(".mon").width() - 6), $("#cus_time").text("長按")) : $(window).width() < 500 ? ($(".mon").width(($(window).width() - 20) / 4 - 10), $(".mon img").width("100%"), $(".mon .time").width($(".mon").width() - 6), $("#cus_time").text("長按")) : ($(".mon").width(80), $(".mon img").width(80), $(".mon .time").width(74), $("#cus_time").text("右鍵")), $(".time_wrap").height($(".mon").width())
        }
    };
